name: Publish to NPM

on:
  push:
    branches: [ main ]
    paths-ignore: ["src/version.ts"] # Prevent infinite loops
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Check if version.ts changed
        id: version-check
        run: |
          if git diff --name-only HEAD~1 | grep -q "src/version.ts"; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "Version.ts was manually changed"
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "Version.ts was not changed, will auto-bump"
          fi

      - name: Bump version if version.ts didn't change
        if: steps.version-check.outputs.version_changed == 'false'
        id: bump-version
        run: |
          # Read current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Bump patch version
          NEW_VERSION=$(node -e "
            const version = '$CURRENT_VERSION';
            const parts = version.split('.');
            parts[2] = (parseInt(parts[2]) + 1).toString();
            console.log(parts.join('.'));
          ")
          
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Update package.json
          npm version $NEW_VERSION --no-git-tag-version
          
          # Update version.ts
          echo "export const VERSION = \"$NEW_VERSION\";" > src/version.ts
          
          # Commit and push changes
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add package.json src/version.ts
          git commit -m "Bump version to $NEW_VERSION [skip ci]"
          git push

      - name: Get version for release
        id: get-version
        run: |
          if [ "${{ steps.version-check.outputs.version_changed }}" == "true" ]; then
            # Use version from package.json if version.ts was manually changed
            VERSION=$(node -p "require('./package.json').version")
          else
            # Use the bumped version
            VERSION="${{ steps.bump-version.outputs.new_version }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"

      - name: Build
        run: npm run build

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_API_TOKEN }}

      - name: Create Release
        if: steps.version-check.outputs.version_changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          release_name: Release v${{ steps.get-version.outputs.version }}
          body: |
            Automated release for version ${{ steps.get-version.outputs.version }}
            
            This release was triggered by a manual change to version.ts.
            
            Changes in this version:
            - See the diff for details
          draft: false
          prerelease: false 